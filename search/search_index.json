{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udc4b \u6b61\u8fce\u4f86\u5230\u6211\u7684\u7db2\u9801 \u00b6 \u6211\u662f Hachi Tsai\uff0c\u9664\u4e86\u5de5\u696d\u81ea\u52d5\u5316\u63a7\u5236\u5916\uff0c\u81f4\u529b\u5b78\u7fd2AIML/\u81ea\u52d5\u5316/MCP\u7b49\u79d1\u6280\u5de5\u5177\u3002 \u8a66\u8457\u900f\u904e\u4e0d\u65b7Input/Output\uff0c\u5728\u8de8\u9818\u57df\u4e2d\u6301\u7e8c\u878d\u5408\u6240\u5b78\uff0c\u63d0\u6607\u7af6\u722d\u529b\u3002 \u65e5\u672c\u8a9e\u80fd\u529b\u8a66\u9a57\u4e00\u7d1a\u8a8d\u8b49 \u65e5\u8a9e\u5be6\u52d9\u61c9\u7528\u7d93\u9a57\u8d85\u904e10\u5e74 \u81ea\u5b78\u53d6\u5f97\u8b49\u5238\u5546\u9ad8\u7d1a\u696d\u52d9\u54e1\u8cc7\u683c/\u91d1\u878d\u6295\u8cc7\u76f8\u95dc\u6cd5\u898f\u53ca\u77e5\u8b58 \u64c1\u6709 DCS\u3001PLC\u3001Python \u6280\u80fd \u63a2\u7d22\u80fd\u6e90\u81ea\u52d5\u5316\u8207\u534a\u5c0e\u9ad4\u8a2d\u5099\u5354\u4f5c \ud83c\udf1f\u7a4d\u6975\u81ea\u4e3b\u5b78\u7fd2\u65b0\u578b\u7522\u696d\u6216\u9818\u57df\u5c08\u696d\u77e5\u8b58 \u76ee\u524d\u6211\u6b63\u5728\u5b78\u7fd2 Python GUI \u958b\u767c\u8207 SQL \u8cc7\u6599\u8655\u7406\u4ee5\u53ca\u5340\u584a\u93c8\u6280\u8853\u8207\u77e5\u8b58\u3002 \u9019\u662f\u6211\u7684\u5b78\u7fd2\u7d00\u9304\u3002\u8acb\u591a\u6307\u6559 \ud83d\ude4c \u00b6 classDiagram note for OT \"Core Technologies\" class \u9996\u9801\u7e3d\u89bd { <<abstract>> + Who I am } class OT:::red { <<module>> + DCS\u63a7\u5236\u7cfb\u7d71\u8207Mermaid + PLC \u6280\u8853 + HMI \u6559\u5b78 } class \u5340\u584a\u93c8\u6280\u8853 { <<module>> + \u667a\u80fd\u5408\u7d04\u61c9\u7528 } class PROGRAMING { <<module>> + GitHub + Python with AI-ML + Docker + SQL } class \u8cc7\u6e90\u6574\u7406 { <<module>> + \u5e38\u7528\u5de5\u696d\u901a\u8a0a\u5354\u5b9a + \u63a8\u85a6\u5b78\u7fd2\u8cc7\u6e90 } \u9996\u9801\u7e3d\u89bd <|-- OT \u9996\u9801\u7e3d\u89bd <|-- \u5340\u584a\u93c8\u6280\u8853 \u9996\u9801\u7e3d\u89bd <|-- PROGRAMING \u9996\u9801\u7e3d\u89bd <|-- \u8cc7\u6e90\u6574\u7406 classDef default fill: #ffffff,stroke: #000000,stroke-width:2px,color:red classDiagram classDef clearStyle fill:#FCF3CF,stroke:#333,stroke-width:2px; class ClearNode clearStyle ClearNode : +connect() ClearNode : -data","title":"\ud83d\udc4b \u9996\u9801\u7e3d\u89bd"},{"location":"#_1","text":"\u6211\u662f Hachi Tsai\uff0c\u9664\u4e86\u5de5\u696d\u81ea\u52d5\u5316\u63a7\u5236\u5916\uff0c\u81f4\u529b\u5b78\u7fd2AIML/\u81ea\u52d5\u5316/MCP\u7b49\u79d1\u6280\u5de5\u5177\u3002 \u8a66\u8457\u900f\u904e\u4e0d\u65b7Input/Output\uff0c\u5728\u8de8\u9818\u57df\u4e2d\u6301\u7e8c\u878d\u5408\u6240\u5b78\uff0c\u63d0\u6607\u7af6\u722d\u529b\u3002 \u65e5\u672c\u8a9e\u80fd\u529b\u8a66\u9a57\u4e00\u7d1a\u8a8d\u8b49 \u65e5\u8a9e\u5be6\u52d9\u61c9\u7528\u7d93\u9a57\u8d85\u904e10\u5e74 \u81ea\u5b78\u53d6\u5f97\u8b49\u5238\u5546\u9ad8\u7d1a\u696d\u52d9\u54e1\u8cc7\u683c/\u91d1\u878d\u6295\u8cc7\u76f8\u95dc\u6cd5\u898f\u53ca\u77e5\u8b58 \u64c1\u6709 DCS\u3001PLC\u3001Python \u6280\u80fd \u63a2\u7d22\u80fd\u6e90\u81ea\u52d5\u5316\u8207\u534a\u5c0e\u9ad4\u8a2d\u5099\u5354\u4f5c \ud83c\udf1f\u7a4d\u6975\u81ea\u4e3b\u5b78\u7fd2\u65b0\u578b\u7522\u696d\u6216\u9818\u57df\u5c08\u696d\u77e5\u8b58 \u76ee\u524d\u6211\u6b63\u5728\u5b78\u7fd2 Python GUI \u958b\u767c\u8207 SQL \u8cc7\u6599\u8655\u7406\u4ee5\u53ca\u5340\u584a\u93c8\u6280\u8853\u8207\u77e5\u8b58\u3002","title":"\ud83d\udc4b \u6b61\u8fce\u4f86\u5230\u6211\u7684\u7db2\u9801"},{"location":"#_2","text":"classDiagram note for OT \"Core Technologies\" class \u9996\u9801\u7e3d\u89bd { <<abstract>> + Who I am } class OT:::red { <<module>> + DCS\u63a7\u5236\u7cfb\u7d71\u8207Mermaid + PLC \u6280\u8853 + HMI \u6559\u5b78 } class \u5340\u584a\u93c8\u6280\u8853 { <<module>> + \u667a\u80fd\u5408\u7d04\u61c9\u7528 } class PROGRAMING { <<module>> + GitHub + Python with AI-ML + Docker + SQL } class \u8cc7\u6e90\u6574\u7406 { <<module>> + \u5e38\u7528\u5de5\u696d\u901a\u8a0a\u5354\u5b9a + \u63a8\u85a6\u5b78\u7fd2\u8cc7\u6e90 } \u9996\u9801\u7e3d\u89bd <|-- OT \u9996\u9801\u7e3d\u89bd <|-- \u5340\u584a\u93c8\u6280\u8853 \u9996\u9801\u7e3d\u89bd <|-- PROGRAMING \u9996\u9801\u7e3d\u89bd <|-- \u8cc7\u6e90\u6574\u7406 classDef default fill: #ffffff,stroke: #000000,stroke-width:2px,color:red classDiagram classDef clearStyle fill:#FCF3CF,stroke:#333,stroke-width:2px; class ClearNode clearStyle ClearNode : +connect() ClearNode : -data","title":"\u9019\u662f\u6211\u7684\u5b78\u7fd2\u7d00\u9304\u3002\u8acb\u591a\u6307\u6559 \ud83d\ude4c"},{"location":"BlockChain/SmartContract/","text":"","title":"\u667a\u80fd\u5408\u7d04\u61c9\u7528"},{"location":"DCS/Hitachi/Control-logic-mermaid/","text":"\u5de5\u696d\u63a7\u5236\u5834\u666f\u4e0b\uff0c\u751f\u7522\u8a2d\u5099\u9593\u7684\u8a0a\u865f\u9023\u9396\u63a7\u5236 \u00b6 EXAMPLE1 \u00b6 %%{init:{ \"theme\":\"base\" }}%% flowchart LR subgraph MF01\u5224\u65b7 classDef redBold fill:#fff,stroke:red, font-weight:bold,font-style:italic classDef GreenBold fill:#0f0,stroke: #ff0ff0,font-weight:bold,font-style:italic A1[DB0049] -->|<font color='red'>NOT</font>| C1(((\u4efb\u4e00\u8a0a\u865f\u70baTRUE))) B1[DI0093] -->|NOT| C1 D1[DI0001] -->|NOT| C1 G1[IN0101] -->|TRUE| C1 H1[IN0102] -->|TRUE| C1 I1[IN0103] -->|TRUE| C1 L1[IN0108] -->|TRUE| C1 J1[IN0152] -->|TRUE| C1 K1[IN0131] -->|TRUE| C1 C1 -->|TRUE| E1[MF01 = TRUE] C1 -->|FALSE| F1[MF01 \u7dad\u6301 FALSE] class A1,B1,D1 redBold class C1 GreenBold linkStyle 0,1,2 stroke:red,font-style:italic, font-weight:bold end subgraph MF02\u5224\u65b7 A2[DI0052] -->|***NOT***| C2 B2[DI0050] -->|***NOT***| C2 linkStyle 11,12 stroke:red,font-style:italic, font-weight:bold G2[IN0154] -->|TRUE| C2 H2[IN0165] -->|TRUE| C2 I2[IN0166] -->|TRUE| C2 C2(((\u4efb\u4e00\u8a0a\u865f\u70baTRUE))) -->|TRUE| E2[MF02 = TRUE] C2 -->|FALSE| F2[MF02 \u7dad\u6301 FALSE] class C2 GreenBold class A2,B2 redBold end subgraph MF03\u5224\u65b7 A3[IN0168] -->|TRUE| C3 B3[IN0169] -->|TRUE| C3 D3[IN0170] -->|TRUE| C3 G3[IN0171] -->|TRUE| C3 H3[IN0172] -->|TRUE| C3 I3[IN0173] -->|TRUE| C3 C3(((\u4efb\u4e00\u8a0a\u865f\u70baTRUE))) -->|TRUE| E3[MF03 = TRUE] C3 -->|FALSE| F3[MF03 \u7dad\u6301 FALSE] class C3 GreenBold end subgraph MF\u689d\u4ef6\u5224\u65b7 E1 --> C4(((\u4efb\u4e00MF\u70baTRUE))) E2 --> C4 E3 --> C4 C4 -->|TRUE| K4[UA0251 = TRUE] C4 -->|FALSE| K5[UA0251 \u7dad\u6301 FALSE] class C4 GreenBold end subgraph \u8b66\u5831\u5fa9\u6b78 K4 z31@==>|***NOT***| B4[UA0251=0] z31@{ animate: true} B4 --> B10[DI0037=TRUE] linkStyle 31 stroke:red,font-style:italic, font-weight:bold end","title":"\u908f\u8f2f\u63a7\u5236\u5716\u50cf\u5316"},{"location":"DCS/Hitachi/Control-logic-mermaid/#_1","text":"","title":"\u5de5\u696d\u63a7\u5236\u5834\u666f\u4e0b\uff0c\u751f\u7522\u8a2d\u5099\u9593\u7684\u8a0a\u865f\u9023\u9396\u63a7\u5236"},{"location":"DCS/Hitachi/Control-logic-mermaid/#example1","text":"%%{init:{ \"theme\":\"base\" }}%% flowchart LR subgraph MF01\u5224\u65b7 classDef redBold fill:#fff,stroke:red, font-weight:bold,font-style:italic classDef GreenBold fill:#0f0,stroke: #ff0ff0,font-weight:bold,font-style:italic A1[DB0049] -->|<font color='red'>NOT</font>| C1(((\u4efb\u4e00\u8a0a\u865f\u70baTRUE))) B1[DI0093] -->|NOT| C1 D1[DI0001] -->|NOT| C1 G1[IN0101] -->|TRUE| C1 H1[IN0102] -->|TRUE| C1 I1[IN0103] -->|TRUE| C1 L1[IN0108] -->|TRUE| C1 J1[IN0152] -->|TRUE| C1 K1[IN0131] -->|TRUE| C1 C1 -->|TRUE| E1[MF01 = TRUE] C1 -->|FALSE| F1[MF01 \u7dad\u6301 FALSE] class A1,B1,D1 redBold class C1 GreenBold linkStyle 0,1,2 stroke:red,font-style:italic, font-weight:bold end subgraph MF02\u5224\u65b7 A2[DI0052] -->|***NOT***| C2 B2[DI0050] -->|***NOT***| C2 linkStyle 11,12 stroke:red,font-style:italic, font-weight:bold G2[IN0154] -->|TRUE| C2 H2[IN0165] -->|TRUE| C2 I2[IN0166] -->|TRUE| C2 C2(((\u4efb\u4e00\u8a0a\u865f\u70baTRUE))) -->|TRUE| E2[MF02 = TRUE] C2 -->|FALSE| F2[MF02 \u7dad\u6301 FALSE] class C2 GreenBold class A2,B2 redBold end subgraph MF03\u5224\u65b7 A3[IN0168] -->|TRUE| C3 B3[IN0169] -->|TRUE| C3 D3[IN0170] -->|TRUE| C3 G3[IN0171] -->|TRUE| C3 H3[IN0172] -->|TRUE| C3 I3[IN0173] -->|TRUE| C3 C3(((\u4efb\u4e00\u8a0a\u865f\u70baTRUE))) -->|TRUE| E3[MF03 = TRUE] C3 -->|FALSE| F3[MF03 \u7dad\u6301 FALSE] class C3 GreenBold end subgraph MF\u689d\u4ef6\u5224\u65b7 E1 --> C4(((\u4efb\u4e00MF\u70baTRUE))) E2 --> C4 E3 --> C4 C4 -->|TRUE| K4[UA0251 = TRUE] C4 -->|FALSE| K5[UA0251 \u7dad\u6301 FALSE] class C4 GreenBold end subgraph \u8b66\u5831\u5fa9\u6b78 K4 z31@==>|***NOT***| B4[UA0251=0] z31@{ animate: true} B4 --> B10[DI0037=TRUE] linkStyle 31 stroke:red,font-style:italic, font-weight:bold end","title":"EXAMPLE1"},{"location":"DCS/Hitachi/concepts/","text":"\ud83d\ude80 EX-N01A \u6280\u8853\u624b\u518a\u4e00\u6b65\u6b65 \u00b6 \ud83c\udfaf \u5b78\u7fd2\u91cd\u9ede\u6982\u62ec \u00b6 \u2705 \u719f\u6089\u65e5\u7acb DCS \u67b6\u69cb\u8207\u6a21\u7d44\u5316\u908f\u8f2f \u2705 \u638c\u63e1SLC\u63a7\u5236\u6a21\u7d44\uff08PID\uff0fBUMPLESS\uff0f\u9806\u5e8f\u63a7\u5236\uff09\u8a2d\u5b9a\u6d41\u7a0b \u2705 \u63a1\u7528\u300c\u6642\u9593\u5716\uff0b\u6d41\u7a0b\u5716\u300d\u96d9\u8ef8\u5e8f\u5217\u63a7\u5236\u6a21\u5f0f \u2705 \u898f\u5283\u591a\u8b66\u5831\uff0f\u5de5\u4f5c\u6307\u5f15\u529f\u80fd \u2705 \u5f37\u5316 OPC\uff0fFL-NET \u901a\u8a0a\u6574\u5408\u8207\u67b6\u69cb\u53ef\u8996\u5316\u6280\u5de7 \u2705 \u5efa\u7acb\u8de8\u8a9e\u6280\u8853\u8a5e\u5f59\u8868\uff0c\u652f\u63f4\u65e5\u21c4\u4e2d\u5c08\u6848\u5354\u4f5c \ud83e\udde9 \u6280\u8853\u6280\u80fd\u5730\u5716\uff08Skill Map\uff09 \u00b6 \u985e\u5225 \u6280\u8853\uff0f\u5de5\u5177 \u63a7\u5236\u6a21\u7d44\u8a2d\u8a08 PID\u8abf\u8ae7\u3001\u8ff4\u8def\u6f14\u7b97\u3001\u9806\u5e8f\u63a7\u5236\u6642\u9593\u8ef8\uff0f\u6d41\u7a0b\u5716 \u756b\u9762\u898f\u5283 \u5716\u50cf\u5f0f\u8a2d\u8a08\u3001\u6a21\u7d44\u756b\u9762\u91cd\u7528\u3001\u65e5\u9031\u6708\u5831\u8868\u5e33\u7968\u8a2d\u8a08 \u901a\u8a0a\u6574\u5408 OPC UA\u914d\u7f6e\u3001FL-NET TCP\u67b6\u69cb\u8a2d\u8a08\u8207\u8a3a\u65b7 \u67b6\u69cb\u8a2d\u8a08 \u4e3b\u526f\u7ad9\u5197\u9918\u898f\u5283\u3001IO\u6a21\u7d44\u96c6\u4e2d\u63a5\u7dda\u8207\u7de8\u5740 \u6587\u4ef6\u7ba1\u7406 \u65e5\u6587\u539f\u5ee0\u6587\u4ef6\u8f49\u8b6f\u8207\u6280\u8853\u6458\u8981\u3001Markdown\u6280\u8853\u7b46\u8a18\u64b0\u5beb \u6280\u8853\u5354\u8abf \u539f\u5ee0\u4ea4\u6d41\u7b46\u8a18\u3001\u5354\u540c\u4f5c\u696d\u554f\u984c\u6392\u89e3 \ud83c\udfc6 \u95dc\u9375\u6210\u679c\u4eae\u9ede \u00b6 \ud83d\udcca \u88fd\u4f5c\u7cfb\u7d71\u62d3\u64b2\u5716\uff0b\u63a7\u5236\u6d41\u7a0b\u5716\u5f37\u5316\u8996\u89ba\u5c0e\u89bd \ud83d\udcdd \u652f\u63f4\u6280\u8853\u8a13\u7df4\u8207\u539f\u5ee0\u5354\u4f5c\u4ea4\u6d41 \ud83d\udcc2 \u5c07\u7b46\u8a18\u6574\u7406\u70ba GitHub Pages \u77e5\u8b58\u5eab\uff0c\u5c55\u73fe\u53ef\u6301\u7e8c\u5b78\u7fd2\u529b","title":"\u63a7\u5236\u908f\u8f2f\u7b46\u8a18"},{"location":"DCS/Hitachi/concepts/#ex-n01a","text":"","title":"\ud83d\ude80 EX-N01A \u6280\u8853\u624b\u518a\u4e00\u6b65\u6b65"},{"location":"DCS/Hitachi/concepts/#_1","text":"\u2705 \u719f\u6089\u65e5\u7acb DCS \u67b6\u69cb\u8207\u6a21\u7d44\u5316\u908f\u8f2f \u2705 \u638c\u63e1SLC\u63a7\u5236\u6a21\u7d44\uff08PID\uff0fBUMPLESS\uff0f\u9806\u5e8f\u63a7\u5236\uff09\u8a2d\u5b9a\u6d41\u7a0b \u2705 \u63a1\u7528\u300c\u6642\u9593\u5716\uff0b\u6d41\u7a0b\u5716\u300d\u96d9\u8ef8\u5e8f\u5217\u63a7\u5236\u6a21\u5f0f \u2705 \u898f\u5283\u591a\u8b66\u5831\uff0f\u5de5\u4f5c\u6307\u5f15\u529f\u80fd \u2705 \u5f37\u5316 OPC\uff0fFL-NET \u901a\u8a0a\u6574\u5408\u8207\u67b6\u69cb\u53ef\u8996\u5316\u6280\u5de7 \u2705 \u5efa\u7acb\u8de8\u8a9e\u6280\u8853\u8a5e\u5f59\u8868\uff0c\u652f\u63f4\u65e5\u21c4\u4e2d\u5c08\u6848\u5354\u4f5c","title":"\ud83c\udfaf \u5b78\u7fd2\u91cd\u9ede\u6982\u62ec"},{"location":"DCS/Hitachi/concepts/#skill-map","text":"\u985e\u5225 \u6280\u8853\uff0f\u5de5\u5177 \u63a7\u5236\u6a21\u7d44\u8a2d\u8a08 PID\u8abf\u8ae7\u3001\u8ff4\u8def\u6f14\u7b97\u3001\u9806\u5e8f\u63a7\u5236\u6642\u9593\u8ef8\uff0f\u6d41\u7a0b\u5716 \u756b\u9762\u898f\u5283 \u5716\u50cf\u5f0f\u8a2d\u8a08\u3001\u6a21\u7d44\u756b\u9762\u91cd\u7528\u3001\u65e5\u9031\u6708\u5831\u8868\u5e33\u7968\u8a2d\u8a08 \u901a\u8a0a\u6574\u5408 OPC UA\u914d\u7f6e\u3001FL-NET TCP\u67b6\u69cb\u8a2d\u8a08\u8207\u8a3a\u65b7 \u67b6\u69cb\u8a2d\u8a08 \u4e3b\u526f\u7ad9\u5197\u9918\u898f\u5283\u3001IO\u6a21\u7d44\u96c6\u4e2d\u63a5\u7dda\u8207\u7de8\u5740 \u6587\u4ef6\u7ba1\u7406 \u65e5\u6587\u539f\u5ee0\u6587\u4ef6\u8f49\u8b6f\u8207\u6280\u8853\u6458\u8981\u3001Markdown\u6280\u8853\u7b46\u8a18\u64b0\u5beb \u6280\u8853\u5354\u8abf \u539f\u5ee0\u4ea4\u6d41\u7b46\u8a18\u3001\u5354\u540c\u4f5c\u696d\u554f\u984c\u6392\u89e3","title":"\ud83e\udde9 \u6280\u8853\u6280\u80fd\u5730\u5716\uff08Skill Map\uff09"},{"location":"DCS/Hitachi/concepts/#_2","text":"\ud83d\udcca \u88fd\u4f5c\u7cfb\u7d71\u62d3\u64b2\u5716\uff0b\u63a7\u5236\u6d41\u7a0b\u5716\u5f37\u5316\u8996\u89ba\u5c0e\u89bd \ud83d\udcdd \u652f\u63f4\u6280\u8853\u8a13\u7df4\u8207\u539f\u5ee0\u5354\u4f5c\u4ea4\u6d41 \ud83d\udcc2 \u5c07\u7b46\u8a18\u6574\u7406\u70ba GitHub Pages \u77e5\u8b58\u5eab\uff0c\u5c55\u73fe\u53ef\u6301\u7e8c\u5b78\u7fd2\u529b","title":"\ud83c\udfc6 \u95dc\u9375\u6210\u679c\u4eae\u9ede"},{"location":"DCS/Hitachi/io-list/","text":"IO List \u6280\u8853\u7b46\u8a18 \u00b6 \u8a18\u9304 DCS \u7cfb\u7d71\u4e2d\u5404\u9805 IO \u9ede\u4f4d\u8207\u5c0d\u61c9\u529f\u80fd\uff0c\u8cc7\u6599\u4f86\u6e90\u70ba\u73fe\u5834\u8a2d\u5b9a Excel \u8868\u683c\u5f59\u6574\u3002 \ud83d\udccb \u6a19\u6e96\u6b04\u4f4d\u7d50\u69cb \u00b6 \u6a19\u7c64\u7de8\u865f \u985e\u578b \u8a0a\u865f\u5f62\u5f0f \u4f4d\u7f6e \u5099\u8a3b AIC101 AI \u6a21\u64ec\u91cf \u4e3b\u6a5f\u623f \u58d3\u529b\u63a7\u5236\u8ff4\u8def DIC205 DI \u6578\u4f4d\u91cf \u5b50\u6a5f\u623f \u95a5\u4f4d\u56de\u994b\u4fe1\u865f \u8a3b\uff1aAI = Analog Input\u3001DI = Digital Input \ud83d\udcc2 \u539f\u59cb\u8cc7\u6599\u4f86\u6e90\u8207\u7248\u672c \u00b6 Excel \u5f59\u6574\u8868\uff1a TEST-iolist.xlsx \u532f\u51fa\u65e5\u671f\uff1a2025/07/20 \u4f5c\u8005\u6574\u7406\uff1aHachi \ud83e\udde0 \u5c55\u793a\u8aaa\u660e \u00b6 \u672c\u9801\u6574\u7406\u4e4b IO List \u53ef\u642d\u914d\u4e0b\u5217\u6a21\u7d44\u4f7f\u7528\uff1a \u63a7\u5236\u908f\u8f2f\u5716\u5c55\u793a\uff08\u898b diagrams/control-flow.png \uff09 \u6280\u8853\u8a5e\u5f59\u8aaa\u660e\uff08\u65e5\u6587\u7ffb\u8b6f\u898b japanese.md \uff09 GitHub Pages \u5c0e\u89bd\u5217\u7d22\u5f15\u81ea\u52d5\u66f4\u65b0\uff08\u7531 mkdocs.yml \u63a7\u7ba1\uff09 \ud83d\udd17 \u5ef6\u4f38\u9023\u7d50 \u00b6 \u63a7\u5236\u908f\u8f2f\u7b46\u8a18","title":"IO List \u6280\u8853\u7b46\u8a18"},{"location":"DCS/Hitachi/io-list/#io-list","text":"\u8a18\u9304 DCS \u7cfb\u7d71\u4e2d\u5404\u9805 IO \u9ede\u4f4d\u8207\u5c0d\u61c9\u529f\u80fd\uff0c\u8cc7\u6599\u4f86\u6e90\u70ba\u73fe\u5834\u8a2d\u5b9a Excel \u8868\u683c\u5f59\u6574\u3002","title":"IO List \u6280\u8853\u7b46\u8a18"},{"location":"DCS/Hitachi/io-list/#_1","text":"\u6a19\u7c64\u7de8\u865f \u985e\u578b \u8a0a\u865f\u5f62\u5f0f \u4f4d\u7f6e \u5099\u8a3b AIC101 AI \u6a21\u64ec\u91cf \u4e3b\u6a5f\u623f \u58d3\u529b\u63a7\u5236\u8ff4\u8def DIC205 DI \u6578\u4f4d\u91cf \u5b50\u6a5f\u623f \u95a5\u4f4d\u56de\u994b\u4fe1\u865f \u8a3b\uff1aAI = Analog Input\u3001DI = Digital Input","title":"\ud83d\udccb \u6a19\u6e96\u6b04\u4f4d\u7d50\u69cb"},{"location":"DCS/Hitachi/io-list/#_2","text":"Excel \u5f59\u6574\u8868\uff1a TEST-iolist.xlsx \u532f\u51fa\u65e5\u671f\uff1a2025/07/20 \u4f5c\u8005\u6574\u7406\uff1aHachi","title":"\ud83d\udcc2 \u539f\u59cb\u8cc7\u6599\u4f86\u6e90\u8207\u7248\u672c"},{"location":"DCS/Hitachi/io-list/#_3","text":"\u672c\u9801\u6574\u7406\u4e4b IO List \u53ef\u642d\u914d\u4e0b\u5217\u6a21\u7d44\u4f7f\u7528\uff1a \u63a7\u5236\u908f\u8f2f\u5716\u5c55\u793a\uff08\u898b diagrams/control-flow.png \uff09 \u6280\u8853\u8a5e\u5f59\u8aaa\u660e\uff08\u65e5\u6587\u7ffb\u8b6f\u898b japanese.md \uff09 GitHub Pages \u5c0e\u89bd\u5217\u7d22\u5f15\u81ea\u52d5\u66f4\u65b0\uff08\u7531 mkdocs.yml \u63a7\u7ba1\uff09","title":"\ud83e\udde0 \u5c55\u793a\u8aaa\u660e"},{"location":"DCS/Hitachi/io-list/#_4","text":"\u63a7\u5236\u908f\u8f2f\u7b46\u8a18","title":"\ud83d\udd17 \u5ef6\u4f38\u9023\u7d50"},{"location":"DCS/Hitachi/japanese/","text":"","title":"\u6280\u8853\u65e5\u6587\u7b46\u8a18"},{"location":"HMI/iFIX/","text":"","title":"iFIX \u7b46\u8a18"},{"location":"PLC/MELSEC-Q/","text":"","title":"MELSEC-Q \u64cd\u4f5c\u7b46\u8a18"},{"location":"Programing/docker/","text":"DOCKER\u8de8\u5e73\u53f0\u67b6\u69cb\u8207\u93e1\u50cf\u5efa\u69cb\u6d41\u7a0b\u5716 \u00b6 flowchart TD A[\ud83d\udcc1 \u5efa\u7acb\u672c\u5730 Git Repo: Docker] --> B[\u270f\ufe0f \u64b0\u5beb Dockerfile <br> requirements.txt] B --> C[\ud83d\udd27 \u5efa\u7acb Buildx builder: my-builder] C --> D[\u2699\ufe0f \u521d\u59cb\u5316 builder: bootstrap] D --> E[\ud83d\udee0\ufe0f \u4f7f\u7528 buildx \u5efa\u69cb image: mylab1] E --> F{\ud83d\udce6 \u652f\u63f4\u5e73\u53f0} F --> F1[linux/amd64] F --> F2[linux/arm64] F1 & F2 --> G[\ud83e\uddea \u6e2c\u8a66 docker run \u672c\u5730\u57f7\u884c] G --> H[\ud83d\udd10 \u767b\u5165 Docker Hub] H --> I[\ud83d\ude80 \u63a8\u9001 Image \u81f3 hachitsai/mylab1] \u6280\u8853\u5efa\u69cb\u6d41\u7a0b\u6458\u8981 \u00b6 \u7bc0\u9ede \u6307\u4ee4\uff0f\u52d5\u4f5c \u8aaa\u660e\uff0f\u7528\u9014 A \u5efa\u7acb\u8cc7\u6599\u593e\u3001\u521d\u59cb\u5316 Git repo \u5efa\u7acb\u672c\u5730\u5c08\u6848\u74b0\u5883 B \u64b0\u5beb Dockerfile\uff0c\u4f7f\u7528 python:3.12-slim \uff08\u642d\u914d requirements.txt\uff09 \u5efa\u69cb\u57fa\u790e Image C docker buildx create --name my-builder --use \u5efa\u7acb\u4e26\u555f\u7528 Builder D docker buildx inspect --bootstrap \u521d\u59cb\u5316 Builder E docker buildx build --platform linux/amd64,linux/arm64 -t hachitsai/mylab1:latest --push . \u591a\u5e73\u53f0\u5efa\u69cb\u4e26\u63a8\u9001 Image F Buildx \u652f\u63f4\u6307\u5b9a\u5e73\u53f0\uff08Mac M1 \u2192 arm64\u3001Linux x86 \u2192 amd64\uff09 \u8a2d\u5b9a\u652f\u63f4\u5e73\u53f0 G docker run --rm hachitsai/mylab1:latest \u672c\u5730\u57f7\u884c\u6e2c\u8a66 H docker login \u767b\u5165 Docker Hub I docker push hachitsai/mylab1:latest \u6216\u5efa\u69cb\u6642\u76f4\u63a5 --push \u767c\u4f48 Image \u5230 Docker Hub Docker \u7dad\u904b\u8207\u7ba1\u7406\u9805\u76ee \u00b6 \u985e\u578b \u6307\u4ee4\uff0f\u52d5\u4f5c \u7528\u9014\u8aaa\u660e \u2705 \u57f7\u884c docker run --rm filename:version \u5373\u6642\u57f7\u884c Image \u4e26\u522a\u9664\u5bb9\u5668 \ud83d\udd01 \u62c9\u53d6 docker pull hachitsai/filename:version \u5728\u5176\u4ed6\u6a5f\u5668\u4e0a\u62c9\u53d6\u4e26\u4f7f\u7528 Image \ud83e\udded \u6aa2\u67e5 docker buildx ls \u6aa2\u67e5\u76ee\u524d\u4f7f\u7528\u4e2d\u7684 builder \u8207\u652f\u63f4\u5e73\u53f0 \ud83d\uddd1\ufe0f \u6e05\u7406 docker buildx rm my-builder \u79fb\u9664\u6307\u5b9a builder\uff08\u7d50\u675f\u5c08\u6848\u6216\u91cd\u5efa\u7528\u9014\uff09","title":"Docker"},{"location":"Programing/docker/#docker","text":"flowchart TD A[\ud83d\udcc1 \u5efa\u7acb\u672c\u5730 Git Repo: Docker] --> B[\u270f\ufe0f \u64b0\u5beb Dockerfile <br> requirements.txt] B --> C[\ud83d\udd27 \u5efa\u7acb Buildx builder: my-builder] C --> D[\u2699\ufe0f \u521d\u59cb\u5316 builder: bootstrap] D --> E[\ud83d\udee0\ufe0f \u4f7f\u7528 buildx \u5efa\u69cb image: mylab1] E --> F{\ud83d\udce6 \u652f\u63f4\u5e73\u53f0} F --> F1[linux/amd64] F --> F2[linux/arm64] F1 & F2 --> G[\ud83e\uddea \u6e2c\u8a66 docker run \u672c\u5730\u57f7\u884c] G --> H[\ud83d\udd10 \u767b\u5165 Docker Hub] H --> I[\ud83d\ude80 \u63a8\u9001 Image \u81f3 hachitsai/mylab1]","title":"DOCKER\u8de8\u5e73\u53f0\u67b6\u69cb\u8207\u93e1\u50cf\u5efa\u69cb\u6d41\u7a0b\u5716"},{"location":"Programing/docker/#_1","text":"\u7bc0\u9ede \u6307\u4ee4\uff0f\u52d5\u4f5c \u8aaa\u660e\uff0f\u7528\u9014 A \u5efa\u7acb\u8cc7\u6599\u593e\u3001\u521d\u59cb\u5316 Git repo \u5efa\u7acb\u672c\u5730\u5c08\u6848\u74b0\u5883 B \u64b0\u5beb Dockerfile\uff0c\u4f7f\u7528 python:3.12-slim \uff08\u642d\u914d requirements.txt\uff09 \u5efa\u69cb\u57fa\u790e Image C docker buildx create --name my-builder --use \u5efa\u7acb\u4e26\u555f\u7528 Builder D docker buildx inspect --bootstrap \u521d\u59cb\u5316 Builder E docker buildx build --platform linux/amd64,linux/arm64 -t hachitsai/mylab1:latest --push . \u591a\u5e73\u53f0\u5efa\u69cb\u4e26\u63a8\u9001 Image F Buildx \u652f\u63f4\u6307\u5b9a\u5e73\u53f0\uff08Mac M1 \u2192 arm64\u3001Linux x86 \u2192 amd64\uff09 \u8a2d\u5b9a\u652f\u63f4\u5e73\u53f0 G docker run --rm hachitsai/mylab1:latest \u672c\u5730\u57f7\u884c\u6e2c\u8a66 H docker login \u767b\u5165 Docker Hub I docker push hachitsai/mylab1:latest \u6216\u5efa\u69cb\u6642\u76f4\u63a5 --push \u767c\u4f48 Image \u5230 Docker Hub","title":"\u6280\u8853\u5efa\u69cb\u6d41\u7a0b\u6458\u8981"},{"location":"Programing/docker/#docker_1","text":"\u985e\u578b \u6307\u4ee4\uff0f\u52d5\u4f5c \u7528\u9014\u8aaa\u660e \u2705 \u57f7\u884c docker run --rm filename:version \u5373\u6642\u57f7\u884c Image \u4e26\u522a\u9664\u5bb9\u5668 \ud83d\udd01 \u62c9\u53d6 docker pull hachitsai/filename:version \u5728\u5176\u4ed6\u6a5f\u5668\u4e0a\u62c9\u53d6\u4e26\u4f7f\u7528 Image \ud83e\udded \u6aa2\u67e5 docker buildx ls \u6aa2\u67e5\u76ee\u524d\u4f7f\u7528\u4e2d\u7684 builder \u8207\u652f\u63f4\u5e73\u53f0 \ud83d\uddd1\ufe0f \u6e05\u7406 docker buildx rm my-builder \u79fb\u9664\u6307\u5b9a builder\uff08\u7d50\u675f\u5c08\u6848\u6216\u91cd\u5efa\u7528\u9014\uff09","title":"Docker \u7dad\u904b\u8207\u7ba1\u7406\u9805\u76ee"},{"location":"Programing/github/","text":"","title":"GitHub"},{"location":"Programing/python-with-aiml/","text":"","title":"Python with AI-ML"},{"location":"Resources/OT-communicating-protocl/","text":"","title":"\u5e38\u7528\u5de5\u696d\u901a\u8a0a\u5354\u5b9a"},{"location":"Resources/Coursera/Learning_Schedule/","text":"","title":"\u63a8\u85a6\u5b78\u7fd2\u8cc7\u6e90"}]}